// <auto-generated />
using System;
using GymTracker.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GymTracker.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250926195206_AddWorkoutModels")]
    partial class AddWorkoutModels
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.9");

            modelBuilder.Entity("GymTracker.Models.Exercise", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Exercises");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Flat Bench Press"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Squat"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Deadlift"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Overhead Press"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Barbell Row"
                        });
                });

            modelBuilder.Entity("GymTracker.Models.ExerciseMuscle", b =>
                {
                    b.Property<int>("ExerciseId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MuscleId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Intensity")
                        .HasColumnType("INTEGER");

                    b.HasKey("ExerciseId", "MuscleId");

                    b.HasIndex("MuscleId");

                    b.ToTable("ExerciseMuscles");

                    b.HasData(
                        new
                        {
                            ExerciseId = 1,
                            MuscleId = 4,
                            Intensity = 9
                        },
                        new
                        {
                            ExerciseId = 1,
                            MuscleId = 2,
                            Intensity = 6
                        },
                        new
                        {
                            ExerciseId = 1,
                            MuscleId = 8,
                            Intensity = 3
                        },
                        new
                        {
                            ExerciseId = 2,
                            MuscleId = 11,
                            Intensity = 9
                        },
                        new
                        {
                            ExerciseId = 2,
                            MuscleId = 13,
                            Intensity = 7
                        },
                        new
                        {
                            ExerciseId = 2,
                            MuscleId = 12,
                            Intensity = 6
                        },
                        new
                        {
                            ExerciseId = 2,
                            MuscleId = 14,
                            Intensity = 4
                        },
                        new
                        {
                            ExerciseId = 3,
                            MuscleId = 12,
                            Intensity = 8
                        },
                        new
                        {
                            ExerciseId = 3,
                            MuscleId = 13,
                            Intensity = 7
                        },
                        new
                        {
                            ExerciseId = 3,
                            MuscleId = 10,
                            Intensity = 7
                        },
                        new
                        {
                            ExerciseId = 3,
                            MuscleId = 7,
                            Intensity = 5
                        },
                        new
                        {
                            ExerciseId = 4,
                            MuscleId = 8,
                            Intensity = 9
                        },
                        new
                        {
                            ExerciseId = 4,
                            MuscleId = 2,
                            Intensity = 6
                        },
                        new
                        {
                            ExerciseId = 4,
                            MuscleId = 4,
                            Intensity = 4
                        },
                        new
                        {
                            ExerciseId = 5,
                            MuscleId = 9,
                            Intensity = 8
                        },
                        new
                        {
                            ExerciseId = 5,
                            MuscleId = 10,
                            Intensity = 6
                        },
                        new
                        {
                            ExerciseId = 5,
                            MuscleId = 7,
                            Intensity = 5
                        },
                        new
                        {
                            ExerciseId = 5,
                            MuscleId = 3,
                            Intensity = 4
                        });
                });

            modelBuilder.Entity("GymTracker.Models.Muscle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Muscles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Biceps"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Triceps"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Forearms"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Upper Chest"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Lower Chest"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Abs"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Traps"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Shoulders"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Upper Back"
                        },
                        new
                        {
                            Id = 10,
                            Name = "Lower Back"
                        },
                        new
                        {
                            Id = 11,
                            Name = "Quads"
                        },
                        new
                        {
                            Id = 12,
                            Name = "Hamstrings"
                        },
                        new
                        {
                            Id = 13,
                            Name = "Glutes"
                        },
                        new
                        {
                            Id = 14,
                            Name = "Calves"
                        });
                });

            modelBuilder.Entity("GymTracker.Models.WorkoutEntry", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ExerciseId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SessionId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ExerciseId");

                    b.HasIndex("SessionId");

                    b.ToTable("WorkoutEntries");
                });

            modelBuilder.Entity("GymTracker.Models.WorkoutSession", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("WorkoutSessions");
                });

            modelBuilder.Entity("GymTracker.Models.WorkoutSet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("EntryId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Reps")
                        .HasColumnType("INTEGER");

                    b.Property<double>("Weight")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.HasIndex("EntryId");

                    b.ToTable("WorkoutSets");
                });

            modelBuilder.Entity("GymTracker.Models.ExerciseMuscle", b =>
                {
                    b.HasOne("GymTracker.Models.Exercise", "Exercise")
                        .WithMany("ExerciseMuscles")
                        .HasForeignKey("ExerciseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GymTracker.Models.Muscle", "Muscle")
                        .WithMany("ExerciseMuscles")
                        .HasForeignKey("MuscleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Exercise");

                    b.Navigation("Muscle");
                });

            modelBuilder.Entity("GymTracker.Models.WorkoutEntry", b =>
                {
                    b.HasOne("GymTracker.Models.Exercise", "Exercise")
                        .WithMany()
                        .HasForeignKey("ExerciseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GymTracker.Models.WorkoutSession", "Session")
                        .WithMany("Entries")
                        .HasForeignKey("SessionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Exercise");

                    b.Navigation("Session");
                });

            modelBuilder.Entity("GymTracker.Models.WorkoutSet", b =>
                {
                    b.HasOne("GymTracker.Models.WorkoutEntry", "Entry")
                        .WithMany("Sets")
                        .HasForeignKey("EntryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Entry");
                });

            modelBuilder.Entity("GymTracker.Models.Exercise", b =>
                {
                    b.Navigation("ExerciseMuscles");
                });

            modelBuilder.Entity("GymTracker.Models.Muscle", b =>
                {
                    b.Navigation("ExerciseMuscles");
                });

            modelBuilder.Entity("GymTracker.Models.WorkoutEntry", b =>
                {
                    b.Navigation("Sets");
                });

            modelBuilder.Entity("GymTracker.Models.WorkoutSession", b =>
                {
                    b.Navigation("Entries");
                });
#pragma warning restore 612, 618
        }
    }
}
