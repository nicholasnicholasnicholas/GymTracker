@page "/register"
@rendermode InteractiveServer
@layout Components.Layout.AuthLayout
@using GymTracker.Services
@inject UserService UserService
@inject NavigationManager NavigationManager

<div class="auth-card">
    <h3 class="text-center">Create an Account</h3>
    <p class="text-center mb-4">Join Gym Tracker and start your fitness journey</p>

    <EditForm FormName="RegisterForm" Model="@registerModel" OnValidSubmit="HandleValidSubmit">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div class="mb-3">
            <label for="username" class="form-label fw-semibold">Username</label>
            <InputText id="username" class="form-control" placeholder="Enter username" @bind-Value="registerModel.Username" />
        </div>

        <div class="mb-3">
            <label for="password" class="form-label fw-semibold">Password</label>
            <InputText id="password" type="password" class="form-control" placeholder="Enter password" @bind-Value="registerModel.Password" />
        </div>

        <button type="submit" class="btn w-100 mt-2 register-btn">Register</button>

        <div class="text-center my-3 text-muted">or</div>

        <!-- Google-style sign-in button -->
        <button type="button" class="btn w-100 google-btn">
            <img src="https://developers.google.com/identity/images/g-logo.png" alt="Google" class="google-icon" />
            Sign up with Google
        </button>

        @if (!string.IsNullOrEmpty(message))
        {
            <div class="alert alert-info mt-3 text-center">@message</div>
        }
    </EditForm>

    <p class="text-center mt-4">
        Already have an account?
        <a href="/login" class="fw-semibold">Login</a>
    </p>
</div>

@code {
    private RegisterModel registerModel = new RegisterModel();
    private string message = "";

    private async Task HandleValidSubmit()
    {
        bool success = await UserService.RegisterAsync(registerModel.Username, registerModel.Password);

        if (success)
        {
            message = "✅ Registration successful! Redirecting to login...";
            await Task.Delay(1000);
            NavigationManager.NavigateTo("/login");
        }
        else
        {
            message = "⚠️ Username already exists or invalid input.";
        }
    }

    public class RegisterModel
    {
        public string Username { get; set; } = "";
        public string Password { get; set; } = "";
    }
}
